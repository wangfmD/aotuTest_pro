# coding=utf-8import osimport sysimport unittestfrom time import sleepfrom selenium import webdriversys.path.append(os.environ.get('PY_DEV_HOME'))from webTest_pro.common.initData import initfrom webTest_pro.common.model.baseActionAdd import user_loginfrom webTest_pro.common.model.baseUploadFile import add_UploadVideo, add_Streaming, add_ContntVideoreload(sys)sys.setdefaultencoding("utf-8")'''添加节目数据'''videoDataMp4 = [    {        'addTypeSelect': u'公共资源库',        'addFileN': u'测试节目名(视频mp4)',        'addFileDesc': u'测试备注信息',        'videoType': u'视频',        'fileName': u'001.mp4',        'uploadType': 'video',        'disk': 'Z:\\testResource\\py',        'fileNames': '001.mp4',        'sleepTime': '45'    }]videoDataAsf = [    {        'addTypeSelect': u'公共资源库',        'addFileN': u'测试节目名(视频asf)',        'addFileDesc': u'测试备注信息',        'videoType': u'视频',        'fileName': u'002.asf',        'uploadType': 'video',        'disk': 'Z:\\testResource\\py',        'fileNames': '002.asf',        'sleepTime': '20'    }]videoData3gp = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名(视频3gp)',    'addFileDesc': u'测试备注信息',    'videoType': u'视频',    'fileName': u'003.3gp',    'uploadType': 'video',    'disk': 'Z:\\testResource\\py',    'fileNames': '003.3gp',    'sleepTime': '10'}]videoDataMpg = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名(视频mpg)',    'addFileDesc': u'测试备注信息',    'videoType': u'视频',    'fileName': u'004.mpg',    'uploadType': 'video',    'disk': 'Z:\\testResource\\py',    'fileNames': '004.mpg',    'sleepTime': '15'}]videoDataMov = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名(视频mov)',    'addFileDesc': u'测试备注信息',    'videoType': u'视频',    'fileName': u'005.mov',    'uploadType': 'video',    'disk': 'Z:\\testResource\\py',    'fileNames': '005.mov',    'sleepTime': '10'}]videoDataWmv = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名(视频wmv)',    'addFileDesc': u'测试备注信息',    'videoType': u'视频',    'fileName': u'006.wm',    'uploadType': 'video',    'disk': 'Z:\\testResource\\py',    'fileNames': '006.wmv',    'sleepTime': '10'}]videoDataFlv = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名(视频flv)',    'addFileDesc': u'测试备注信息',    'videoType': u'视频',    'fileName': u'007.flv',    'uploadType': 'video',    'disk': 'Z:\\testResource\\py',    'fileNames': '007.flv',    'sleepTime': '45'}]videoDataAvi = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名(视频avi)',    'addFileDesc': u'测试备注信息',    'videoType': u'视频',    'fileName': u'008.avi',    'uploadType': 'video',    'disk': 'Z:\\testResource\\py',    'fileNames': '008.avi',    'sleepTime': '10'}]videoDataDocx = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名1(文档docx)',    'addFileDesc': u'测试备注信息1',    'videoType': u'文档',    'fileName': u'001.docx',    'uploadType': 'doc',    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '001.docx',    'sleepTime': '4'}]videoDataPptx = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名1(文档pptx)',    'addFileDesc': u'测试备注信息1',    'videoType': u'文档',    'fileName': u'002.pptx',    'uploadType': 'doc',    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '002.pptx',    'sleepTime': '4'}]videoDataPpt = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名1(文档ppt)',    'addFileDesc': u'测试备注信息1',    'videoType': u'文档',    'fileName': u'003.ppt',    'uploadType': 'doc',    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '003.ppt',    'sleepTime': '4'}]videoDataXlsx = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名1(文档xlsx)',    'addFileDesc': u'测试备注信息1',    'videoType': u'文档',    'fileName': u'004.xlsx',    'uploadType': 'doc',    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '004.xlsx',    'sleepTime': '4'}]videoDataDoc = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名1(文档doc)',    'addFileDesc': u'测试备注信息1',    'videoType': u'文档',    'fileName': u'005.doc',    'uploadType': 'doc',    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '005.doc',    'sleepTime': '4'}]videoDataTxt = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名1(文档txt)',    'addFileDesc': u'测试备注信息1',    'videoType': u'文档',    'fileName': u'006.txt',    'uploadType': 'doc',    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '006.txt',    'sleepTime': '20'}]videoDataZHTxt = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名1(文档txt)',    'addFileDesc': u'测试备注信息1',    'videoType': u'文档',    'fileName': u'006zh.tx',    'uploadType': 'doc',    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '006zh.txt',    'sleepTime': '4'}]videoDataPdf = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名1(文档pdf)',    'addFileDesc': u'测试备注信息1',    'videoType': u'文档',    'fileName': u'007.pdf',    'uploadType': 'doc',    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '007.pdf',    'sleepTime': '4'}]videoDataXls = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名1(文档xls)',    'addFileDesc': u'测试备注信息1',    'videoType': u'文档',    'fileName': u'008.xls',    'uploadType': 'doc',    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '008.xls',    'sleepTime': '4'}]videoDataPng = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名2(图片png)',    'addFileDesc': u'测试备注信息2',    'videoType': u'图片',    'fileName': u'banner01.png',    'uploadType': 'pictrue',    'disk': 'Z:\\testResource\\py\\pic',    'fileNames': 'banner01.png',    'sleepTime': '4'}]videoDataJpg = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名2(图片jpg)',    'addFileDesc': u'测试备注信息2',    'videoType': u'图片',    'fileName': u'banner01.jpg',    'uploadType': 'pictrue',    'disk': 'Z:\\testResource\\py\\pic',    'fileNames': 'banner01.jpg',    'sleepTime': '4'}]videoDataJpg2 = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名2(图片jpg)',    'addFileDesc': u'测试备注信息2',    'videoType': u'图片',    'fileName': u'banner03.jpg',    'uploadType': 'pictrue',    'disk': 'Z:\\testResource\\py\\pic',    'fileNames': 'banner03.jpg',    'sleepTime': '4'}]videoDataPNG2 = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名2(水印)',    'addFileDesc': u'测试备注信息3',    'videoType': u'水印',    'fileName': u'文件名3',    'uploadType': 'watermark',    'disk': 'Z:\\testResource',    'fileNames': '002.PNG',    'sleepTime': '4'}]videoDataPNG3 = [{    'addTypeSelect': u'公共资源库',    'addFileN': u'测试节目名2(资料)',    'addFileDesc': u'测试备注信息4',    'videoType': u'资料',    'fileName': u'文件名4',    'uploadType': 'data',    'disk': 'Z:\\testResource',    'fileNames': '002.PNG',    'sleepTime': '4'}]'''添加视频任务'''videoTaskData = [{    'taskName': u'测试任务名1',    'taskRemark': u'测试描述',    'pTypeSelect': u'公共资源库',    'addFileN': u'测试节目名(视频)',    'fileName': u'测试文件名',    'fileType': u'视频',    'fileFormat': u'mp4',    'FileDesc': u'测试描述',    'clarity': '720p',    'startTiem': '00:00:01',    'endTiem': '00:00:30'}]'''查询任务列表'''teskListData = [{'taskName': u'测试任务名1'}]'''添加流媒体地址管理'''streamingData = [{'addName': u'19流媒体地址', "ipAdd": init.db_conf["hostadd"], "serverIps": init.streaming_media["serverIps"], "addType": u"内网"}]'''添加节目数据'''contntVideoDataMp4 = [    {        'disk': 'Z:\\testResource\\py',        'fileNames': '001.mp4',        'fileName': '001mp4',        'sleepTime': '45',        'gradetype': '小学',        'gradename': '一年级',        'subjectname': '音乐',        'Schapter': '音乐第一章',        'Ssection': '',        'sknow': '',        'remark': '测试描述',        'type_click': '视频管理'    }]contntVideoDataAsf = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '002.asf',    'fileName': '002asf',    'sleepTime': '20',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '视频管理'}]contntVideoData3gp = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '003.3gp',    'fileName': '0033gp',    'sleepTime': '10',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '视频管理'}]contntVideoDataMpg = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '004.mpg',    'fileName': '004mpg',    'sleepTime': '15',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '视频管理'}]contntVideoDataMov = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '005.mov',    'fileName': '005mov',    'sleepTime': '10',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '视频管理'}]contntVideoDataWmv = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '006.wmv',    'fileName': '006wmv',    'sleepTime': '10',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '视频管理'}]contntVideoDataFlv = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '007.flv',    'fileName': '007flv',    'sleepTime': '45',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '视频管理'}]contntVideoDataAvi = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '008.avi',    'fileName': '008avi',    'sleepTime': '10',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '视频管理'}]contntVideoDataDocx = [{    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '001.docx',    'fileName': '001docx',    'sleepTime': '4',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '文档管理'}]contntVideoDataPptx = [{    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '002.pptx',    'fileName': '002pptx',    'sleepTime': '10',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '文档管理'}]contntVideoDataPpt = [{    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '003.ppt',    'fileName': '003ppt',    'sleepTime': '6',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '文档管理'}]contntVideoDataXlsx = [{    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '004.xlsx',    'fileName': '004xlsx',    'sleepTime': '6',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '文档管理'}]contntVideoDataDoc = [{    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '005.doc',    'fileName': '005doc',    'sleepTime': '6',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '文档管理'}]contntVideoDataTxt = [{    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '006.txt',    'fileName': '006txt',    'sleepTime': '6',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '文档管理'}]contntVideoDataZHTxt = [{    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '006zh.txt',    'fileName': '006zhtxt',    'sleepTime': '6',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '文档管理'}]contntVideoDataPdf = [{    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '007.pdf',    'fileName': '007pdf',    'sleepTime': '6',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '文档管理'}]contntVideoDataXls = [{    'disk': 'Z:\\testResource\\py\\wd',    'fileNames': '008.xls',    'fileName': '008xls',    'sleepTime': '6',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '文档管理'}]wcontntVideoDataMp4 = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '001.mp4',    'fileName': '001mp4',    'sleepTime': '45',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '微课管理'}]wcontntVideoDataAsf = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '002.asf',    'fileName': '002asf',    'sleepTime': '20',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '微课管理'}]wcontntVideoData3gp = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '003.3gp',    'fileName': '0033gp',    'sleepTime': '10',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '微课管理'}]wcontntVideoDataMpg = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '004.mpg',    'fileName': '004mpg',    'sleepTime': '15',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '微课管理'}]wcontntVideoDataMov = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '005.mov',    'fileName': '005mov',    'sleepTime': '10',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '微课管理'}]wcontntVideoDataWmv = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '006.wmv',    'fileName': '006wmv',    'sleepTime': '10',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '微课管理'}]wcontntVideoDataFlv = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '007.flv',    'fileName': '007flv',    'sleepTime': '45',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '微课管理'}]wcontntVideoDataAvi = [{    'disk': 'Z:\\testResource\\py',    'fileNames': '008.avi',    'fileName': '008avi',    'sleepTime': '10',    'gradetype': '小学',    'gradename': '一年级',    'subjectname': '音乐',    'Schapter': '音乐第一章',    'Ssection': '',    'sknow': '',    'remark': '测试描述',    'type_click': '微课管理'}]class videoList(unittest.TestCase):    ''''节目上传管理'''    def setUp(self):        if init.execEnv['execType'] == 'local':            print "\n", "=" * 20, "local exec testcase", "=" * 19            self.driver = webdriver.Chrome()            self.driver.implicitly_wait(8)            self.verificationErrors = []            self.accept_next_alert = True            print "start tenantmanger..."        else:            print "\n", "=" * 20, "remote exec testcase", "=" * 18            browser = webdriver.DesiredCapabilities.CHROME            self.driver = webdriver.Remote(command_executor=init.execEnv['remoteUrl'], desired_capabilities=browser)            self.driver.implicitly_wait(8)            self.verificationErrors = []            self.accept_next_alert = True            print "start tenantmanger..."    def tearDown(self):        self.driver.quit()        self.assertEqual([], self.verificationErrors)        print "schoolmanager end!"        print "=" * 60    def test_add_Streaming(self):        '''添加流媒体地址管理'''        print "exec：test_add_Streaming..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in streamingData:            add_Streaming(driver, **itme)        sleep(0.5)        print "exec：test_add_Streaming success."    def test_add_videoMp4(self):        '''添加节目数据'''        print "exec：test_add_videoMp4..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataMp4:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoMp4 success."    def test_add_videoAsf(self):        '''添加节目数据'''        print "exec：test_add_videoAsf..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataAsf:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoAsf success."    def test_add_video3gp(self):        '''添加节目数据'''        print "exec：test_add_video3gp..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoData3gp:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_video3gp success."    def test_add_videoMpg(self):        '''添加节目数据'''        print "exec：test_add_videoMpg..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataMpg:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoMpg success."    def test_add_videoMov(self):        '''添加节目数据'''        print "exec：test_add_videoMov..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataMov:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoMov success."    def test_add_videoWmv(self):        '''添加节目数据'''        print "exec：test_add_videoWmv..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataWmv:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoWmv success."    def test_add_videoFlv(self):        '''添加节目数据'''        print "exec：test_add_videoFlv..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataFlv:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoFlv success."    def test_add_videoAvi(self):        '''添加节目数据'''        print "exec：test_add_videoAvi..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataAvi:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoAvi success."    def test_add_videoDocx(self):        '''添加节目数据'''        print "exec：test_add_videoDocx..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataDocx:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoDocx success."    def test_add_videoPptx(self):        '''添加节目数据'''        print "exec：test_add_videoPptx..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataPptx:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoPptx success."    def test_add_videoPpt(self):        '''添加节目数据'''        print "exec：test_add_videoPpt..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataPpt:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoPpt success."    def test_add_videoXlsx(self):        '''添加节目数据'''        print "exec：test_add_videoXlsx..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataXlsx:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoXlsx success."    def test_add_videoDoc(self):        '''添加节目数据'''        print "exec：test_add_videoDoc..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataDoc:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoDoc success."    def test_add_videoTxt(self):        '''添加节目数据'''        print "exec：test_add_videoTxt..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataTxt:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoTxt success."    def test_add_videoZHTxt(self):        '''添加节目数据'''        print "exec：test_add_videoZHTxt..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataZHTxt:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoZHTxt success."    def test_add_videoPdf(self):        '''添加节目数据'''        print "exec：test_add_videoPdf..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataPdf:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoPdf success."    def test_add_videoXls(self):        '''添加节目数据'''        print "exec：test_add_videoXls..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataXls:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoXls success."    def test_add_videoPng(self):        '''添加节目数据'''        print "exec：test_add_videoPng..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataPng:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoPng success."    def test_add_videoJpg(self):        '''添加节目数据'''        print "exec：test_add_videoJpg..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataJpg:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoJpg success."    def test_add_videoJpg2(self):        '''添加节目数据'''        print "exec：test_add_videoJpg2..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataJpg2:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoJpg2 success."    def test_add_videoPNG2(self):        '''添加节目数据'''        print "exec：test_add_videoPNG2..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataPNG2:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoPNG2 success."    def test_add_videoPNG3(self):        '''添加节目数据'''        print "exec：test_add_videoPNG3..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in videoDataPNG3:            add_UploadVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_videoPNG3 success."    def test_add_contntVideoMp4(self):        '''添加节目数据'''        print "exec：test_add_contntVideoMp4..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataMp4:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoMp4 success."    def test_add_contntVideoAsf(self):        '''添加节目数据'''        print "exec：test_add_contntVideoAsf..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataAsf:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoAsf success."    def test_add_contntVideo3gp(self):        '''添加节目数据'''        print "exec：test_add_contntVideo3gp..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoData3gp:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideo3gp success."    def test_add_contntVideoMpg(self):        '''添加节目数据'''        print "exec：test_add_contntVideoMpg..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataMpg:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoMpg success."    def test_add_contntVideoMov(self):        '''添加节目数据'''        print "exec：test_add_contntVideoMov..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataMov:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoMov success."    def test_add_contntVideoWmv(self):        '''添加节目数据'''        print "exec：test_add_contntVideoWmv..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataWmv:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoWmv success."    def test_add_contntVideoFlv(self):        '''添加节目数据'''        print "exec：test_add_contntVideoFlv..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataFlv:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoFlv success."    def test_add_contntVideoAvi(self):        '''添加节目数据'''        print "exec：test_add_contntVideoAvi..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataAvi:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoAvi success."    def test_add_contntVideoDocx(self):        '''添加节目数据'''        print "exec：test_add_contntVideoDocx..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataDocx:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoDocx success."    def test_add_contntVideoPptx(self):        '''添加节目数据'''        print "exec：test_add_contntVideoPptx..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataPptx:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoPptx success."    def test_add_contntVideoPpt(self):        '''添加节目数据'''        print "exec：test_add_contntVideoPpt..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataPpt:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoPpt success."    def test_add_contntVideoXlsx(self):        '''添加节目数据'''        print "exec：test_add_contntVideoXlsx..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataXlsx:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoXlsx success."    def test_add_contntVideoDoc(self):        '''添加节目数据'''        print "exec：test_add_contntVideoDoc..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataDoc:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoDoc success."    def test_add_contntVideoTxt(self):        '''添加节目数据'''        print "exec：test_add_contntVideoTxt..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataTxt:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoTxt success."    def test_add_contntVideoZHTxt(self):        '''添加节目数据'''        print "exec：test_add_contntVideoZHTxt..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataZHTxt:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoZHTxt success."    def test_add_contntVideoPdf(self):        '''添加节目数据'''        print "exec：test_add_contntVideoPdf..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataPdf:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoPdf success."    def test_add_contntVideoXls(self):        '''添加节目数据'''        print "exec：test_add_contntVideoXls..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in contntVideoDataXls:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoXls success."    def test_add_contntVideoMp4(self):        '''添加节目数据'''        print "exec：test_add_contntVideoMp4..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in wcontntVideoDataMp4:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoMp4 success."    def test_add_contntVideoAsf(self):        '''添加节目数据'''        print "exec：test_add_contntVideoAsf..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in wcontntVideoDataAsf:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoAsf success."    def test_add_contntVideo3gp(self):        '''添加节目数据'''        print "exec：test_add_contntVideo3gp..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in wcontntVideoData3gp:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideo3gp success."    def test_add_contntVideoMpg(self):        '''添加节目数据'''        print "exec：test_add_contntVideoMpg..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in wcontntVideoDataMpg:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoMpg success."    def test_add_contntVideoMov(self):        '''添加节目数据'''        print "exec：test_add_contntVideoMov..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in wcontntVideoDataMov:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoMov success."    def test_add_contntVideoWmv(self):        '''添加节目数据'''        print "exec：test_add_contntVideoWmv..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in wcontntVideoDataWmv:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoWmv success."    def test_add_contntVideoFlv(self):        '''添加节目数据'''        print "exec：test_add_contntVideoFlv..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in wcontntVideoDataFlv:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoFlv success."    def test_add_contntVideoAvi(self):        '''添加节目数据'''        print "exec：test_add_contntVideoAvi..."        driver = self.driver        user_login(driver, **init.loginInfo)        for itme in wcontntVideoDataAvi:            add_ContntVideo(driver, **itme)        sleep(0.5)        print "exec：test_add_contntVideoAvi success."# def test_add_videoTask(self):#         ''''添加视频任务'''#         print "exec：test_add_videoTask"# #         driver = self.driver#         user_login(driver, **init.loginInfo)#         for itme in videoTaskData:#             add_videoTask(driver, **itme)#         print "exec: test_add_videoTask success."#         sleep(0.5)# #     def test_search_tesk(self):#         '''查询任务列表'''#         print "exec：test_search_tesk"#         driver = self.driver#         user_login(driver, **init.loginInfo)#         for itme in teskListData:#             select_teskList(driver, **itme)#         print "exec: test_search_tesk success."#         sleep(0.5)if __name__ == '__main__':    #     unittest.main()    driver = webdriver.Chrome()    user_login(driver, **init.loginInfo)    for itme in videoDataPptx:        add_UploadVideo(driver, **itme)