# coding=utf-8import osimport sysimport unittestfrom time import sleepfrom selenium import webdriversys.path.append(os.environ.get('PY_DEV_HOME'))from webTest_pro.common.initData import initfrom webTest_pro.common.model.baseActionAdd import user_login, add_livefrom webTest_pro.common.model.baseActionModify import update_livefrom webTest_pro.common.model.baseActionSearch import search_livefrom webTest_pro.common.model.baseActionDel import del_livereload(sys)sys.setdefaultencoding("utf-8")liveData = [{ "endDate":u"2017-12-06 23:50", "pd_lessionId":u"测试直播标题", "pd_sd":"480", 'hd_url': '820', "pd_uhd":"1280", 'pd_classroom': u'测试主讲教室', "pd_schoolName":u"河南省教育局", "pd_order":u"第二节", "subject_all_option":"数学", "pd_lessionType":u"视频会议", "pd_province":u"安徽省", "pd_city":u"芜湖市", "pd_area":u"市辖区", 'disk': 'Z:\\testResource\\py\\pic', 'fileNames': 'banner01.png' }]class live(unittest.TestCase):    ''''直播管理'''#     def setUp(self):#         if init.execEnv['execType'] == 'local':#             print "\n", "=" * 20, "local exec testcase", "=" * 19#             self.driver = webdriver.Chrome()#             self.driver.implicitly_wait(8)#             self.verificationErrors = []#             self.accept_next_alert = True#             print "start live..."#         else:#             print "\n", "=" * 20, "remote exec testcase", "=" * 18#             browser = webdriver.DesiredCapabilities.CHROME#             self.driver = webdriver.Remote(command_executor=init.execEnv['remoteUrl'], desired_capabilities=browser)#             self.driver.implicitly_wait(8)#             self.verificationErrors = []#             self.accept_next_alert = True#             print "start live..."# #     def tearDown(self):#         self.driver.quit()#         self.assertEqual([], self.verificationErrors)#         print "live end!"#         print "=" * 60# #     def test_add_live(self):#         '''添加直播管理'''#         print "exec：test_add_live..."#    #         driver = self.driver#         user_login(driver, **init.loginInfo)#    #         for itme in liveData:#             add_live(driver, **itme)#             search_live(driver, **itme)#         print "exec：test_add_live success."#     #     def test_bupdate_live(self):#         '''修改直播管理'''#         print "exec：test_bupdate_live..."#     #         driver = self.driver#         user_login(driver, **init.loginInfo)#     #         for itme in liveData:#             update_live(driver, **itme)#         print "exec：test_bupdate_live success."#           #     def test_cdel_live(self):#         '''修改直播管理'''#         print "exec：test_cdel_live..."#    #         driver = self.driver#         user_login(driver, **init.loginInfo)#    #         for itme in liveData:#             del_live(driver, **itme)#         print "exec：test_cdel_live success."if __name__ == '__main__':    unittest.main()#     driver = webdriver.Chrome() #     user_login(driver, **init.loginInfo)##     for itme in announcementData:#             search_announcement(driver, **itme)